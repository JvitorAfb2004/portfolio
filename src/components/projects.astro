---
import { Image } from "astro:assets";

interface Project {
  title: string;
  image: string;
  preview: string;
  status: string;
  stacks: string[];
  details: string;
}
const projects: Project[] = [
  {
    title: "Bricoin",
    image: "https://dummyimage.com/400x400?text=Bricoin",
    preview: "https://bricoin.com.br",
    status: "Sistema completo de investimento integrado com gateway de pagamento",
    stacks: ["nodejs", "vue", "mercado pago", "mysql"],
    details: "Desenvolvi o Bricoin, um sistema de investimento completo. No backend, usei arquitetura clean com Node.js e Express, APIs REST e ORM. A integração com o Mercado Pago foi feita via API REST. O sistema suporta múltiplos perfis de usuário e o frontend tem UI/UX totalmente responsiva, que criei do zero.\n\nOs deploys geralmente foram para VPS com Cloudpanel ou Docker.",
  },
  {
    title: "CarroDigital",
    image: "https://dummyimage.com/400x400?text=CarroDigital",
    preview: "https://app.carrodigital.com.br",
    status: "Loja virtual e tambem integração para consultas veiculares",
    stacks: ["react native", "vue", "tailwind", "nodejs", "mysql"],
    details: "Participei na criação do CarroDigital, focado em loja virtual e consultas veiculares. O backend usa Node.js/Express com aquela arquitetura clean (REST API, ORM). No frontend, misturei React Native e Vue, tudo responsivo e com a UI/UX que desenhei. Ele gerencia vários tipos de usuário.\n\nO deploy rolou em VPS com Cloudpanel ou Docker.",
  },
  {
    title: "ViaPet Marketplace",
    image: "https://dummyimage.com/400x400?text=ViaPet Marketplace",
    preview: "https://viapet.shop",
    status: "Marketplace para venda de produtos e serviços para pets",
    stacks: ["vue", "nodejs", "pagbank api", "mysql"],
    details: "Criei o ViaPet Marketplace, uma plataforma robusta para o mundo pet. Backend em Node.js/Express seguindo arquitetura clean (REST API, ORM), com integração via PagBank API. O frontend em Vue tem uma UI/UX responsiva que fiz questão de caprichar.\n\nO deploy foi feito em VPS (Cloudpanel) ou via Docker.",
  },
  {
    title: "ViaPet SaaS",
    image: "https://dummyimage.com/400x400?text=ViaPet SaaS",
    preview: "https://viapet.app",
    status: "Gerenciamento de serviços de petshop",
    stacks: ["nextjs", "nodejs", "mercadopago", "mysql"],
    details: "Desenvolvi o ViaPet SaaS para gerenciar petshops. O backend em Node.js/Express segue a arquitetura clean (REST API, ORM), integrei com Mercado Pago. Ele tem múltiplos perfis de usuário e a UI/UX responsiva foi criação minha.\n\nOs deploys foram via VPS (Cloudpanel) ou Docker.",
  },
  {
    title: "AcheiCasa.net",
    image: "https://dummyimage.com/400x400?text=AcheiCasa.net",
    preview: "https://acheicasa.net",
    status: "Busca de imóveis",
    stacks: ["vue js", "node js", "mercado pago", "mysql"],
    details: "Trabalhei na plataforma AcheiCasa.net, focada em busca de imóveis. Backend em Node.js/Express com arquitetura clean (REST API, ORM) e integração com Mercado Pago. O sistema lida com múltiplos perfis de usuário e a UI/UX responsiva foi desenhada por mim.\n\nDeploys realizados em VPS com Cloudpanel ou Docker.",
  },
  {
    title: "GYMSOFTWARE",
    image: "https://dummyimage.com/1080x1080?text=GymSoftware",
    preview: "",
    status: "Gestão de academias integrado com a catraca",
    stacks: ["vue", "c#", "firebase"],
    details: "Participei do GYMSOFTWARE, um sistema de gestão para academias, incluindo integração com catracas. O backend foi feito em C# com Firebase como banco. O frontend em Vue tem a UI/UX responsiva que criei.\n\nOs deploys utilizei VPS (Cloudpanel) ou Docker.",
  },
  {
    title: "BotYT",
    image: "https://dummyimage.com/400x400?text=BotYT",
    preview: "",
    status: "Bot para publicação automatica com interface e multiplos canais",
    stacks: ["vue", "nodejs", "mysql"],
    details: "Desenvolvi o BotYT, um bot multiusuário para automatizar publicações no YouTube. Backend em Node.js/Express (arquitetura clean, REST API, ORM). A autenticação é robusta, usando Auth0 (Google) com Refresh Token. Ele gerencia vários tipos de perfis, a UI/UX responsiva é minha. O código é limpo, bem comentado e documentado com Swagger.\n\nDeploys em VPS (Cloudpanel) ou Docker.",
  },
  {
    title: "CoPlanner",
    image: "https://dummyimage.com/400x400?text=CoPlanner",
    preview: "",
    status: "Controle de vendas e estoque",
    stacks: ["flutterflow", "supabase", "mysql"],
    details: "Criei o CoPlanner, uma ferramenta para controle de vendas e estoque, usando Supabase no backend. O frontend foi desenvolvido com FlutterFlow e a UI/UX responsiva é de minha autoria.\n\nOs deploys foram feitos em VPS (Cloudpanel) ou Docker.",
  },
  {
    title: "Blog Cienciaetech",
    image: "https://dummyimage.com/400x400?text=Cienciaetech",
    preview: "https://cienciaetech.com/",
    status: "Blog de ciências e tecnologia",
    stacks: ["nodejs", "vue js", "mysql"],
    details: "Desenvolvi o Blog Cienciaetech, um blog focado em ciência e tecnologia. O backend em Node.js/Express segue arquitetura clean (REST API, ORM). Ele tem múltiplos perfis de usuário e a UI/UX responsiva foi feita por mim. O código é limpo, comentado e tem documentação Swagger.\n\nDeploys em VPS (Cloudpanel) ou Docker.",
  },
  {
    title: "Em desenvolvimento: Delibot",
    image: "https://dummyimage.com/400x400?text=DeliBot",
    preview: "",
    status: "Bot para WhatsApp com IA",
    stacks: ["astro", "abacatepay", "nodejs", "evolution api", "n8n", "docker"],
    details: "Desenvolvi o Delibot, um bot para WhatsApp com IA. O frontend foi feito com Astro, o backend em Node.js e a integração com WhatsApp usando a Evolution API. Para pagamentos via Pix, utilizei a Abacatepay. A inteligência artificial é orquestrada via n8n. Toda a solução roda em Docker na minha própria VPS.",
  },
  {
    title: "Em breve: Cardap",
    image: "https://dummyimage.com/400x400?text=Cardap",
    preview: "",
    status: "Sistema de delivery para estabelecimentos",
    stacks: ["flutterflow", "astro", "nodejs", "c#", "websocket", "rest", "openpix"],
    details: "Criei o Cardap, um sistema completo para delivery. Permite que estabelecimentos cadastrem seus produtos e gerem um cardápio online para seus clientes. A arquitetura inclui um app com FlutterFlow (para futuro mobile), frontend web com Astro, backend em Node.js (REST/WebSocket), e C# para integração com impressoras desktop. Utilizei OpenPix para pagamentos, aproveitando o recurso de split. Atualmente focado na versão web.",
  },
];
---

<section
  id="projects"
  class="py-12 border-t border-[#ffffff10] text-[var(--white)]"
>
  <div class="max-w-5xl mx-auto">
    <h2 class="text-lg text-[var(--sec)] mb-2 shiny-sec">Um pouco do que já fiz</h2>
    <h3 class="text-4xl md:text-5xl font-medium mb-8">Projetos</h3>

    <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
      {
        projects.map((project, index) => (
          <div class="group">
            <div class="rounded-2xl overflow-hidden shadow-lg hover:shadow-xl transition-shadow duration-300 mb-4">
              <a href={project.preview} target="_blank" rel="noopener noreferrer">
                <img
                  src={project.image}
                  alt={project.title}
                  class="w-full h-48 md:h-72 object-cover group-hover:scale-105 transition-transform duration-300"
                />
              </a>
            </div>
            <div class="flex items-center px-3">
              <div class="flex-grow">
                <a href={project.preview} target="_blank" rel="noopener noreferrer" class="block hover:underline">
                  <h4 class="text-2xl font-semibold">{project.title}</h4>
                </a>
                <span class="py-1 text-sm text-[var(--white-icon)]">
                  {project.status}
                </span>
                <span class="py-1 text-xs text-[var(--white-icon)] italic">
                  Stacks: {project.stacks.join(", ")}
                </span>
              </div>
              <div class="flex gap-2 ml-auto">
                <a
                  target="_blank"
                  href={project.preview}
                  aria-label="Preview"
                  class="size-14 flex justify-center items-center text-[var(--white-icon)] hover:text-white transition duration-300 ease-in-out border border-1 border-[var(--white-icon-tr)] p-3 rounded-xl bg-[#1414149c] hover:bg-[var(--white-icon-tr)]"
                >
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 24 24"
                    fill="currentColor"
                    class="size-7"
                  >
                    <path d="M16.0037 9.41421L7.39712 18.0208L5.98291 16.6066L14.5895 8H7.00373V6H18.0037V17H16.0037V9.41421Z" />
                  </svg>
                </a>
                <button
                  class="size-14 flex justify-center items-center text-[var(--white-icon)] hover:text-white transition duration-300 ease-in-out border border-1 border-[var(--white-icon-tr)] p-3 rounded-xl bg-[#1414149c] hover:bg-[var(--white-icon-tr)]"
                  data-project-title={project.title}
                  data-project-details={project.details}
                  onclick="openModal(this)"
                  aria-label="Detalhes do Projeto"
                >
                  <svg 
                    xmlns="http://www.w3.org/2000/svg" 
                    viewBox="0 0 24 24" 
                    fill="currentColor" 
                    class="size-7">
                    <path fill-rule="evenodd" d="M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12zm8.706-1.145a.75.75 0 011.06-1.06l3.75 3.75a.75.75 0 01-1.06 1.06l-3.75-3.75zM9.52 9.52a.75.75 0 011.06-.06l3.75 4.5a.75.75 0 11-1.12.94l-3.75-4.5a.75.75 0 01.06-1.06z" clip-rule="evenodd" />
                  </svg>
                </button>
              </div>
            </div>
          </div>
        ))
      }
    </div>
   
  </div>

</section>
